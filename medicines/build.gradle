plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
    id "jacoco"
}

group = 'com.nr'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '3.2.1'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.25.1'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.17.2'
    implementation group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf', version: '9.5.1'
    implementation group: 'com.itextpdf.tool', name: 'xmlworker', version: '5.5.13.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: '3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.2.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.10.0'
}

bootJar{
    archiveFileName = 'app.jar'
}

tasks.named('test') {
    useJUnitPlatform()
}

test{
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        xml.outputLocation = layout.buildDirectory.file('reports/jacoco.xml')
    }
}

sonarqube {
    properties {
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco.xml"
    }
}